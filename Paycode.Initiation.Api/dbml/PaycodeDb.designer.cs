#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Paycode.Initiation.Api.dbml
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PaycodeDB")]
	public partial class PaycodeDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCardlessWithdrawalAuthorisation(CardlessWithdrawalAuthorisation instance);
    partial void UpdateCardlessWithdrawalAuthorisation(CardlessWithdrawalAuthorisation instance);
    partial void DeleteCardlessWithdrawalAuthorisation(CardlessWithdrawalAuthorisation instance);
    partial void InsertCardlessWithdrawalAuthorisationRequestLog(CardlessWithdrawalAuthorisationRequestLog instance);
    partial void UpdateCardlessWithdrawalAuthorisationRequestLog(CardlessWithdrawalAuthorisationRequestLog instance);
    partial void DeleteCardlessWithdrawalAuthorisationRequestLog(CardlessWithdrawalAuthorisationRequestLog instance);
    partial void InsertCardlessWithdrawalTransaction(CardlessWithdrawalTransaction instance);
    partial void UpdateCardlessWithdrawalTransaction(CardlessWithdrawalTransaction instance);
    partial void DeleteCardlessWithdrawalTransaction(CardlessWithdrawalTransaction instance);
    partial void InsertCardlessWithdrawalTransactionReversal(CardlessWithdrawalTransactionReversal instance);
    partial void UpdateCardlessWithdrawalTransactionReversal(CardlessWithdrawalTransactionReversal instance);
    partial void DeleteCardlessWithdrawalTransactionReversal(CardlessWithdrawalTransactionReversal instance);
    #endregion
		
		public PaycodeDbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PaycodeDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PaycodeDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PaycodeDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PaycodeDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PaycodeDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CardlessWithdrawalAuthorisation> CardlessWithdrawalAuthorisations
		{
			get
			{
				return this.GetTable<CardlessWithdrawalAuthorisation>();
			}
		}
		
		public System.Data.Linq.Table<CardlessWithdrawalAuthorisationRequestLog> CardlessWithdrawalAuthorisationRequestLogs
		{
			get
			{
				return this.GetTable<CardlessWithdrawalAuthorisationRequestLog>();
			}
		}
		
		public System.Data.Linq.Table<CardlessWithdrawalTransaction> CardlessWithdrawalTransactions
		{
			get
			{
				return this.GetTable<CardlessWithdrawalTransaction>();
			}
		}
		
		public System.Data.Linq.Table<CardlessWithdrawalTransactionReversal> CardlessWithdrawalTransactionReversals
		{
			get
			{
				return this.GetTable<CardlessWithdrawalTransactionReversal>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CardlessWithdrawalAuthorisation")]
	public partial class CardlessWithdrawalAuthorisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TransactionID;
		
		private System.Nullable<System.DateTime> _AuthorisationDate;
		
		private string _ISW_IP;
		
		private System.Nullable<decimal> _Amount;
		
		private string _TransactionType;
		
		private string _AccountNumber;
		
		private System.Nullable<int> _CardlessWithdrawalTransactionID;
		
		private System.Nullable<bool> _IsReversed;
		
		private System.Nullable<System.DateTime> _DateReversed;
		
		private string _FinacleResponse;
		
		private string _FinacleStan;
		
		private string _FinacleTransactionDateTime;
		
		private EntitySet<CardlessWithdrawalTransactionReversal> _CardlessWithdrawalTransactionReversals;
		
		private EntityRef<CardlessWithdrawalTransaction> _CardlessWithdrawalTransaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTransactionIDChanging(string value);
    partial void OnTransactionIDChanged();
    partial void OnAuthorisationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuthorisationDateChanged();
    partial void OnISW_IPChanging(string value);
    partial void OnISW_IPChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnTransactionTypeChanging(string value);
    partial void OnTransactionTypeChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnCardlessWithdrawalTransactionIDChanging(System.Nullable<int> value);
    partial void OnCardlessWithdrawalTransactionIDChanged();
    partial void OnIsReversedChanging(System.Nullable<bool> value);
    partial void OnIsReversedChanged();
    partial void OnDateReversedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReversedChanged();
    partial void OnFinacleResponseChanging(string value);
    partial void OnFinacleResponseChanged();
    partial void OnFinacleStanChanging(string value);
    partial void OnFinacleStanChanged();
    partial void OnFinacleTransactionDateTimeChanging(string value);
    partial void OnFinacleTransactionDateTimeChanged();
    #endregion
		
		public CardlessWithdrawalAuthorisation()
		{
			this._CardlessWithdrawalTransactionReversals = new EntitySet<CardlessWithdrawalTransactionReversal>(new Action<CardlessWithdrawalTransactionReversal>(this.attach_CardlessWithdrawalTransactionReversals), new Action<CardlessWithdrawalTransactionReversal>(this.detach_CardlessWithdrawalTransactionReversals));
			this._CardlessWithdrawalTransaction = default(EntityRef<CardlessWithdrawalTransaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="VarChar(50)")]
		public string TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorisationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuthorisationDate
		{
			get
			{
				return this._AuthorisationDate;
			}
			set
			{
				if ((this._AuthorisationDate != value))
				{
					this.OnAuthorisationDateChanging(value);
					this.SendPropertyChanging();
					this._AuthorisationDate = value;
					this.SendPropertyChanged("AuthorisationDate");
					this.OnAuthorisationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISW_IP", DbType="VarChar(50)")]
		public string ISW_IP
		{
			get
			{
				return this._ISW_IP;
			}
			set
			{
				if ((this._ISW_IP != value))
				{
					this.OnISW_IPChanging(value);
					this.SendPropertyChanging();
					this._ISW_IP = value;
					this.SendPropertyChanged("ISW_IP");
					this.OnISW_IPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="VarChar(50)")]
		public string TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardlessWithdrawalTransactionID", DbType="Int")]
		public System.Nullable<int> CardlessWithdrawalTransactionID
		{
			get
			{
				return this._CardlessWithdrawalTransactionID;
			}
			set
			{
				if ((this._CardlessWithdrawalTransactionID != value))
				{
					if (this._CardlessWithdrawalTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCardlessWithdrawalTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._CardlessWithdrawalTransactionID = value;
					this.SendPropertyChanged("CardlessWithdrawalTransactionID");
					this.OnCardlessWithdrawalTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReversed", DbType="Bit")]
		public System.Nullable<bool> IsReversed
		{
			get
			{
				return this._IsReversed;
			}
			set
			{
				if ((this._IsReversed != value))
				{
					this.OnIsReversedChanging(value);
					this.SendPropertyChanging();
					this._IsReversed = value;
					this.SendPropertyChanged("IsReversed");
					this.OnIsReversedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReversed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateReversed
		{
			get
			{
				return this._DateReversed;
			}
			set
			{
				if ((this._DateReversed != value))
				{
					this.OnDateReversedChanging(value);
					this.SendPropertyChanging();
					this._DateReversed = value;
					this.SendPropertyChanged("DateReversed");
					this.OnDateReversedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinacleResponse", DbType="VarChar(150)")]
		public string FinacleResponse
		{
			get
			{
				return this._FinacleResponse;
			}
			set
			{
				if ((this._FinacleResponse != value))
				{
					this.OnFinacleResponseChanging(value);
					this.SendPropertyChanging();
					this._FinacleResponse = value;
					this.SendPropertyChanged("FinacleResponse");
					this.OnFinacleResponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinacleStan", DbType="VarChar(150)")]
		public string FinacleStan
		{
			get
			{
				return this._FinacleStan;
			}
			set
			{
				if ((this._FinacleStan != value))
				{
					this.OnFinacleStanChanging(value);
					this.SendPropertyChanging();
					this._FinacleStan = value;
					this.SendPropertyChanged("FinacleStan");
					this.OnFinacleStanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinacleTransactionDateTime", DbType="VarChar(150)")]
		public string FinacleTransactionDateTime
		{
			get
			{
				return this._FinacleTransactionDateTime;
			}
			set
			{
				if ((this._FinacleTransactionDateTime != value))
				{
					this.OnFinacleTransactionDateTimeChanging(value);
					this.SendPropertyChanging();
					this._FinacleTransactionDateTime = value;
					this.SendPropertyChanged("FinacleTransactionDateTime");
					this.OnFinacleTransactionDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CardlessWithdrawalAuthorisation_CardlessWithdrawalTransactionReversal", Storage="_CardlessWithdrawalTransactionReversals", ThisKey="ID", OtherKey="AuthorizationID")]
		public EntitySet<CardlessWithdrawalTransactionReversal> CardlessWithdrawalTransactionReversals
		{
			get
			{
				return this._CardlessWithdrawalTransactionReversals;
			}
			set
			{
				this._CardlessWithdrawalTransactionReversals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CardlessWithdrawalTransaction_CardlessWithdrawalAuthorisation", Storage="_CardlessWithdrawalTransaction", ThisKey="CardlessWithdrawalTransactionID", OtherKey="ID", IsForeignKey=true)]
		public CardlessWithdrawalTransaction CardlessWithdrawalTransaction
		{
			get
			{
				return this._CardlessWithdrawalTransaction.Entity;
			}
			set
			{
				CardlessWithdrawalTransaction previousValue = this._CardlessWithdrawalTransaction.Entity;
				if (((previousValue != value) 
							|| (this._CardlessWithdrawalTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CardlessWithdrawalTransaction.Entity = null;
						previousValue.CardlessWithdrawalAuthorisations.Remove(this);
					}
					this._CardlessWithdrawalTransaction.Entity = value;
					if ((value != null))
					{
						value.CardlessWithdrawalAuthorisations.Add(this);
						this._CardlessWithdrawalTransactionID = value.ID;
					}
					else
					{
						this._CardlessWithdrawalTransactionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CardlessWithdrawalTransaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CardlessWithdrawalTransactionReversals(CardlessWithdrawalTransactionReversal entity)
		{
			this.SendPropertyChanging();
			entity.CardlessWithdrawalAuthorisation = this;
		}
		
		private void detach_CardlessWithdrawalTransactionReversals(CardlessWithdrawalTransactionReversal entity)
		{
			this.SendPropertyChanging();
			entity.CardlessWithdrawalAuthorisation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CardlessWithdrawalAuthorisationRequestLog")]
	public partial class CardlessWithdrawalAuthorisationRequestLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TransactionID;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private string _ISW_IP;
		
		private System.Nullable<decimal> _Amount;
		
		private string _TransactionType;
		
		private string _ProviderToken;
		
		private string _AccountNumber;
		
		private System.Nullable<bool> _IsValid;
		
		private string _ResponseMessage;
		
		private string _FinacleResponse;
		
		private string _FinacleStan;
		
		private string _FinacleTransactionDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTransactionIDChanging(string value);
    partial void OnTransactionIDChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    partial void OnISW_IPChanging(string value);
    partial void OnISW_IPChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnTransactionTypeChanging(string value);
    partial void OnTransactionTypeChanged();
    partial void OnProviderTokenChanging(string value);
    partial void OnProviderTokenChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnIsValidChanging(System.Nullable<bool> value);
    partial void OnIsValidChanged();
    partial void OnResponseMessageChanging(string value);
    partial void OnResponseMessageChanged();
    partial void OnFinacleResponseChanging(string value);
    partial void OnFinacleResponseChanged();
    partial void OnFinacleStanChanging(string value);
    partial void OnFinacleStanChanged();
    partial void OnFinacleTransactionDateTimeChanging(string value);
    partial void OnFinacleTransactionDateTimeChanged();
    #endregion
		
		public CardlessWithdrawalAuthorisationRequestLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="VarChar(50)")]
		public string TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISW_IP", DbType="VarChar(50)")]
		public string ISW_IP
		{
			get
			{
				return this._ISW_IP;
			}
			set
			{
				if ((this._ISW_IP != value))
				{
					this.OnISW_IPChanging(value);
					this.SendPropertyChanging();
					this._ISW_IP = value;
					this.SendPropertyChanged("ISW_IP");
					this.OnISW_IPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="VarChar(50)")]
		public string TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderToken", DbType="VarChar(50)")]
		public string ProviderToken
		{
			get
			{
				return this._ProviderToken;
			}
			set
			{
				if ((this._ProviderToken != value))
				{
					this.OnProviderTokenChanging(value);
					this.SendPropertyChanging();
					this._ProviderToken = value;
					this.SendPropertyChanged("ProviderToken");
					this.OnProviderTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValid", DbType="Bit")]
		public System.Nullable<bool> IsValid
		{
			get
			{
				return this._IsValid;
			}
			set
			{
				if ((this._IsValid != value))
				{
					this.OnIsValidChanging(value);
					this.SendPropertyChanging();
					this._IsValid = value;
					this.SendPropertyChanged("IsValid");
					this.OnIsValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseMessage", DbType="VarChar(100)")]
		public string ResponseMessage
		{
			get
			{
				return this._ResponseMessage;
			}
			set
			{
				if ((this._ResponseMessage != value))
				{
					this.OnResponseMessageChanging(value);
					this.SendPropertyChanging();
					this._ResponseMessage = value;
					this.SendPropertyChanged("ResponseMessage");
					this.OnResponseMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinacleResponse", DbType="VarChar(150)")]
		public string FinacleResponse
		{
			get
			{
				return this._FinacleResponse;
			}
			set
			{
				if ((this._FinacleResponse != value))
				{
					this.OnFinacleResponseChanging(value);
					this.SendPropertyChanging();
					this._FinacleResponse = value;
					this.SendPropertyChanged("FinacleResponse");
					this.OnFinacleResponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinacleStan", DbType="VarChar(150)")]
		public string FinacleStan
		{
			get
			{
				return this._FinacleStan;
			}
			set
			{
				if ((this._FinacleStan != value))
				{
					this.OnFinacleStanChanging(value);
					this.SendPropertyChanging();
					this._FinacleStan = value;
					this.SendPropertyChanged("FinacleStan");
					this.OnFinacleStanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinacleTransactionDateTime", DbType="VarChar(150)")]
		public string FinacleTransactionDateTime
		{
			get
			{
				return this._FinacleTransactionDateTime;
			}
			set
			{
				if ((this._FinacleTransactionDateTime != value))
				{
					this.OnFinacleTransactionDateTimeChanging(value);
					this.SendPropertyChanging();
					this._FinacleTransactionDateTime = value;
					this.SendPropertyChanged("FinacleTransactionDateTime");
					this.OnFinacleTransactionDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CardlessWithdrawalTransaction")]
	public partial class CardlessWithdrawalTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TransactionReference;
		
		private string _CIF;
		
		private string _AccountNumber;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private System.Nullable<decimal> _TransactionAmount;
		
		private System.Nullable<decimal> _AmountAuthorized;
		
		private System.Nullable<int> _TokenUsageCount;
		
		private string _SourceChannel;
		
		private string _PaymentMethodTypeCode;
		
		private string _PaymentMethodCode;
		
		private string _FrontEndPartnerId;
		
		private System.Nullable<int> _TokenLifeTimeInMinutes;
		
		private string _PayWithMobileChannel;
		
		private string _ProviderToken;
		
		private string _TransactionType;
		
		private string _CodeGenerationChannel;
		
		private string _OneTimePassword;
		
		private string _PayWithMobileToken;
		
		private System.Nullable<bool> _IsTokenUsed;
		
		private System.Nullable<bool> _IsExpired;
		
		private System.Nullable<bool> _IsCanceled;
		
		private string _AuthorizationSessionKey;
		
		private string _ReversalSessionKey;
		
		private string _LienID;
		
		private EntitySet<CardlessWithdrawalAuthorisation> _CardlessWithdrawalAuthorisations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTransactionReferenceChanging(string value);
    partial void OnTransactionReferenceChanged();
    partial void OnCIFChanging(string value);
    partial void OnCIFChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnTransactionAmountChanging(System.Nullable<decimal> value);
    partial void OnTransactionAmountChanged();
    partial void OnAmountAuthorizedChanging(System.Nullable<decimal> value);
    partial void OnAmountAuthorizedChanged();
    partial void OnTokenUsageCountChanging(System.Nullable<int> value);
    partial void OnTokenUsageCountChanged();
    partial void OnSourceChannelChanging(string value);
    partial void OnSourceChannelChanged();
    partial void OnPaymentMethodTypeCodeChanging(string value);
    partial void OnPaymentMethodTypeCodeChanged();
    partial void OnPaymentMethodCodeChanging(string value);
    partial void OnPaymentMethodCodeChanged();
    partial void OnFrontEndPartnerIdChanging(string value);
    partial void OnFrontEndPartnerIdChanged();
    partial void OnTokenLifeTimeInMinutesChanging(System.Nullable<int> value);
    partial void OnTokenLifeTimeInMinutesChanged();
    partial void OnPayWithMobileChannelChanging(string value);
    partial void OnPayWithMobileChannelChanged();
    partial void OnProviderTokenChanging(string value);
    partial void OnProviderTokenChanged();
    partial void OnTransactionTypeChanging(string value);
    partial void OnTransactionTypeChanged();
    partial void OnCodeGenerationChannelChanging(string value);
    partial void OnCodeGenerationChannelChanged();
    partial void OnOneTimePasswordChanging(string value);
    partial void OnOneTimePasswordChanged();
    partial void OnPayWithMobileTokenChanging(string value);
    partial void OnPayWithMobileTokenChanged();
    partial void OnIsTokenUsedChanging(System.Nullable<bool> value);
    partial void OnIsTokenUsedChanged();
    partial void OnIsExpiredChanging(System.Nullable<bool> value);
    partial void OnIsExpiredChanged();
    partial void OnIsCanceledChanging(System.Nullable<bool> value);
    partial void OnIsCanceledChanged();
    partial void OnAuthorizationSessionKeyChanging(string value);
    partial void OnAuthorizationSessionKeyChanged();
    partial void OnReversalSessionKeyChanging(string value);
    partial void OnReversalSessionKeyChanged();
    partial void OnLienIDChanging(string value);
    partial void OnLienIDChanged();
    #endregion
		
		public CardlessWithdrawalTransaction()
		{
			this._CardlessWithdrawalAuthorisations = new EntitySet<CardlessWithdrawalAuthorisation>(new Action<CardlessWithdrawalAuthorisation>(this.attach_CardlessWithdrawalAuthorisations), new Action<CardlessWithdrawalAuthorisation>(this.detach_CardlessWithdrawalAuthorisations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionReference", DbType="VarChar(50)")]
		public string TransactionReference
		{
			get
			{
				return this._TransactionReference;
			}
			set
			{
				if ((this._TransactionReference != value))
				{
					this.OnTransactionReferenceChanging(value);
					this.SendPropertyChanging();
					this._TransactionReference = value;
					this.SendPropertyChanged("TransactionReference");
					this.OnTransactionReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIF", DbType="VarChar(50)")]
		public string CIF
		{
			get
			{
				return this._CIF;
			}
			set
			{
				if ((this._CIF != value))
				{
					this.OnCIFChanging(value);
					this.SendPropertyChanging();
					this._CIF = value;
					this.SendPropertyChanged("CIF");
					this.OnCIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TransactionAmount
		{
			get
			{
				return this._TransactionAmount;
			}
			set
			{
				if ((this._TransactionAmount != value))
				{
					this.OnTransactionAmountChanging(value);
					this.SendPropertyChanging();
					this._TransactionAmount = value;
					this.SendPropertyChanged("TransactionAmount");
					this.OnTransactionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountAuthorized", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountAuthorized
		{
			get
			{
				return this._AmountAuthorized;
			}
			set
			{
				if ((this._AmountAuthorized != value))
				{
					this.OnAmountAuthorizedChanging(value);
					this.SendPropertyChanging();
					this._AmountAuthorized = value;
					this.SendPropertyChanged("AmountAuthorized");
					this.OnAmountAuthorizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenUsageCount", DbType="Int")]
		public System.Nullable<int> TokenUsageCount
		{
			get
			{
				return this._TokenUsageCount;
			}
			set
			{
				if ((this._TokenUsageCount != value))
				{
					this.OnTokenUsageCountChanging(value);
					this.SendPropertyChanging();
					this._TokenUsageCount = value;
					this.SendPropertyChanged("TokenUsageCount");
					this.OnTokenUsageCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceChannel", DbType="VarChar(50)")]
		public string SourceChannel
		{
			get
			{
				return this._SourceChannel;
			}
			set
			{
				if ((this._SourceChannel != value))
				{
					this.OnSourceChannelChanging(value);
					this.SendPropertyChanging();
					this._SourceChannel = value;
					this.SendPropertyChanged("SourceChannel");
					this.OnSourceChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodTypeCode", DbType="VarChar(50)")]
		public string PaymentMethodTypeCode
		{
			get
			{
				return this._PaymentMethodTypeCode;
			}
			set
			{
				if ((this._PaymentMethodTypeCode != value))
				{
					this.OnPaymentMethodTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodTypeCode = value;
					this.SendPropertyChanged("PaymentMethodTypeCode");
					this.OnPaymentMethodTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodCode", DbType="VarChar(50)")]
		public string PaymentMethodCode
		{
			get
			{
				return this._PaymentMethodCode;
			}
			set
			{
				if ((this._PaymentMethodCode != value))
				{
					this.OnPaymentMethodCodeChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodCode = value;
					this.SendPropertyChanged("PaymentMethodCode");
					this.OnPaymentMethodCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrontEndPartnerId", DbType="VarChar(50)")]
		public string FrontEndPartnerId
		{
			get
			{
				return this._FrontEndPartnerId;
			}
			set
			{
				if ((this._FrontEndPartnerId != value))
				{
					this.OnFrontEndPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._FrontEndPartnerId = value;
					this.SendPropertyChanged("FrontEndPartnerId");
					this.OnFrontEndPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenLifeTimeInMinutes", DbType="Int")]
		public System.Nullable<int> TokenLifeTimeInMinutes
		{
			get
			{
				return this._TokenLifeTimeInMinutes;
			}
			set
			{
				if ((this._TokenLifeTimeInMinutes != value))
				{
					this.OnTokenLifeTimeInMinutesChanging(value);
					this.SendPropertyChanging();
					this._TokenLifeTimeInMinutes = value;
					this.SendPropertyChanged("TokenLifeTimeInMinutes");
					this.OnTokenLifeTimeInMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayWithMobileChannel", DbType="VarChar(50)")]
		public string PayWithMobileChannel
		{
			get
			{
				return this._PayWithMobileChannel;
			}
			set
			{
				if ((this._PayWithMobileChannel != value))
				{
					this.OnPayWithMobileChannelChanging(value);
					this.SendPropertyChanging();
					this._PayWithMobileChannel = value;
					this.SendPropertyChanged("PayWithMobileChannel");
					this.OnPayWithMobileChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderToken", DbType="VarChar(50)")]
		public string ProviderToken
		{
			get
			{
				return this._ProviderToken;
			}
			set
			{
				if ((this._ProviderToken != value))
				{
					this.OnProviderTokenChanging(value);
					this.SendPropertyChanging();
					this._ProviderToken = value;
					this.SendPropertyChanged("ProviderToken");
					this.OnProviderTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="VarChar(50)")]
		public string TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeGenerationChannel", DbType="VarChar(50)")]
		public string CodeGenerationChannel
		{
			get
			{
				return this._CodeGenerationChannel;
			}
			set
			{
				if ((this._CodeGenerationChannel != value))
				{
					this.OnCodeGenerationChannelChanging(value);
					this.SendPropertyChanging();
					this._CodeGenerationChannel = value;
					this.SendPropertyChanged("CodeGenerationChannel");
					this.OnCodeGenerationChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OneTimePassword", DbType="VarChar(50)")]
		public string OneTimePassword
		{
			get
			{
				return this._OneTimePassword;
			}
			set
			{
				if ((this._OneTimePassword != value))
				{
					this.OnOneTimePasswordChanging(value);
					this.SendPropertyChanging();
					this._OneTimePassword = value;
					this.SendPropertyChanged("OneTimePassword");
					this.OnOneTimePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayWithMobileToken", DbType="VarChar(50)")]
		public string PayWithMobileToken
		{
			get
			{
				return this._PayWithMobileToken;
			}
			set
			{
				if ((this._PayWithMobileToken != value))
				{
					this.OnPayWithMobileTokenChanging(value);
					this.SendPropertyChanging();
					this._PayWithMobileToken = value;
					this.SendPropertyChanged("PayWithMobileToken");
					this.OnPayWithMobileTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTokenUsed", DbType="Bit")]
		public System.Nullable<bool> IsTokenUsed
		{
			get
			{
				return this._IsTokenUsed;
			}
			set
			{
				if ((this._IsTokenUsed != value))
				{
					this.OnIsTokenUsedChanging(value);
					this.SendPropertyChanging();
					this._IsTokenUsed = value;
					this.SendPropertyChanged("IsTokenUsed");
					this.OnIsTokenUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExpired", DbType="Bit")]
		public System.Nullable<bool> IsExpired
		{
			get
			{
				return this._IsExpired;
			}
			set
			{
				if ((this._IsExpired != value))
				{
					this.OnIsExpiredChanging(value);
					this.SendPropertyChanging();
					this._IsExpired = value;
					this.SendPropertyChanged("IsExpired");
					this.OnIsExpiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCanceled", DbType="Bit")]
		public System.Nullable<bool> IsCanceled
		{
			get
			{
				return this._IsCanceled;
			}
			set
			{
				if ((this._IsCanceled != value))
				{
					this.OnIsCanceledChanging(value);
					this.SendPropertyChanging();
					this._IsCanceled = value;
					this.SendPropertyChanged("IsCanceled");
					this.OnIsCanceledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizationSessionKey", DbType="VarChar(350)")]
		public string AuthorizationSessionKey
		{
			get
			{
				return this._AuthorizationSessionKey;
			}
			set
			{
				if ((this._AuthorizationSessionKey != value))
				{
					this.OnAuthorizationSessionKeyChanging(value);
					this.SendPropertyChanging();
					this._AuthorizationSessionKey = value;
					this.SendPropertyChanged("AuthorizationSessionKey");
					this.OnAuthorizationSessionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReversalSessionKey", DbType="VarChar(350)")]
		public string ReversalSessionKey
		{
			get
			{
				return this._ReversalSessionKey;
			}
			set
			{
				if ((this._ReversalSessionKey != value))
				{
					this.OnReversalSessionKeyChanging(value);
					this.SendPropertyChanging();
					this._ReversalSessionKey = value;
					this.SendPropertyChanged("ReversalSessionKey");
					this.OnReversalSessionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LienID", DbType="VarChar(350)")]
		public string LienID
		{
			get
			{
				return this._LienID;
			}
			set
			{
				if ((this._LienID != value))
				{
					this.OnLienIDChanging(value);
					this.SendPropertyChanging();
					this._LienID = value;
					this.SendPropertyChanged("LienID");
					this.OnLienIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CardlessWithdrawalTransaction_CardlessWithdrawalAuthorisation", Storage="_CardlessWithdrawalAuthorisations", ThisKey="ID", OtherKey="CardlessWithdrawalTransactionID")]
		public EntitySet<CardlessWithdrawalAuthorisation> CardlessWithdrawalAuthorisations
		{
			get
			{
				return this._CardlessWithdrawalAuthorisations;
			}
			set
			{
				this._CardlessWithdrawalAuthorisations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CardlessWithdrawalAuthorisations(CardlessWithdrawalAuthorisation entity)
		{
			this.SendPropertyChanging();
			entity.CardlessWithdrawalTransaction = this;
		}
		
		private void detach_CardlessWithdrawalAuthorisations(CardlessWithdrawalAuthorisation entity)
		{
			this.SendPropertyChanging();
			entity.CardlessWithdrawalTransaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CardlessWithdrawalTransactionReversal")]
	public partial class CardlessWithdrawalTransactionReversal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _AuthorizationID;
		
		private System.Nullable<System.DateTime> _ReversalDate;
		
		private string _ISW_IP;
		
		private EntityRef<CardlessWithdrawalAuthorisation> _CardlessWithdrawalAuthorisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAuthorizationIDChanging(System.Nullable<int> value);
    partial void OnAuthorizationIDChanged();
    partial void OnReversalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReversalDateChanged();
    partial void OnISW_IPChanging(string value);
    partial void OnISW_IPChanged();
    #endregion
		
		public CardlessWithdrawalTransactionReversal()
		{
			this._CardlessWithdrawalAuthorisation = default(EntityRef<CardlessWithdrawalAuthorisation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizationID", DbType="Int")]
		public System.Nullable<int> AuthorizationID
		{
			get
			{
				return this._AuthorizationID;
			}
			set
			{
				if ((this._AuthorizationID != value))
				{
					if (this._CardlessWithdrawalAuthorisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorizationIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorizationID = value;
					this.SendPropertyChanged("AuthorizationID");
					this.OnAuthorizationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReversalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReversalDate
		{
			get
			{
				return this._ReversalDate;
			}
			set
			{
				if ((this._ReversalDate != value))
				{
					this.OnReversalDateChanging(value);
					this.SendPropertyChanging();
					this._ReversalDate = value;
					this.SendPropertyChanged("ReversalDate");
					this.OnReversalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISW_IP", DbType="VarChar(50)")]
		public string ISW_IP
		{
			get
			{
				return this._ISW_IP;
			}
			set
			{
				if ((this._ISW_IP != value))
				{
					this.OnISW_IPChanging(value);
					this.SendPropertyChanging();
					this._ISW_IP = value;
					this.SendPropertyChanged("ISW_IP");
					this.OnISW_IPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CardlessWithdrawalAuthorisation_CardlessWithdrawalTransactionReversal", Storage="_CardlessWithdrawalAuthorisation", ThisKey="AuthorizationID", OtherKey="ID", IsForeignKey=true)]
		public CardlessWithdrawalAuthorisation CardlessWithdrawalAuthorisation
		{
			get
			{
				return this._CardlessWithdrawalAuthorisation.Entity;
			}
			set
			{
				CardlessWithdrawalAuthorisation previousValue = this._CardlessWithdrawalAuthorisation.Entity;
				if (((previousValue != value) 
							|| (this._CardlessWithdrawalAuthorisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CardlessWithdrawalAuthorisation.Entity = null;
						previousValue.CardlessWithdrawalTransactionReversals.Remove(this);
					}
					this._CardlessWithdrawalAuthorisation.Entity = value;
					if ((value != null))
					{
						value.CardlessWithdrawalTransactionReversals.Add(this);
						this._AuthorizationID = value.ID;
					}
					else
					{
						this._AuthorizationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CardlessWithdrawalAuthorisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
